a= colnames(OTUdf)
a= as.data.frame(colnames(OTUdf))
View(a)
View(a)
ASVs= as.data.frame(colnames(ASVdf))
OTUs= as.data.frame(colnames(OTUdf))
library(kable)
install.packages("kable")
library(kable)
install.packages("kableExtra")
library(kableExtra)
library(kableExtra)
kable
install.packages("kable")
kable
library(kable)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(tidyverse)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(stringr)
library(magrittr)
library(knitr)
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
m.filtered = m.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_mothur) %>%
column_to_rownames('OTU')
phylum_name_mothur = "Chloroflexi"
phylum_name_qiime2 = "D_1__Chloroflexi"
m.filtered = m.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_mothur) %>%
column_to_rownames('OTU')
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across depth")
View(m.perc)
View(m.perc)
View(otu_stats)
View(otu_stats)
View(otu_stats)
View(otu_stats)
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",], linear_fit$p-value["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
m.tax_table = data.frame(m.norm@tax_table)
m.filtered = m.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_mothur) %>%
column_to_rownames('OTU')
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across depth")
View(otu_stats)
View(otu_stats)
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$p-value["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$pvalue["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across depth")
View(otu_stats)
View(otu_stats)
View(otu_stats)
View(otu_stats)
View(otu_stats)
View(otu_stats)
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$fstatistic["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$fstatistic
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across depth")
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$fstatistic[1,]
otu_stats <- rbind(otu_stats, otu_data)
}
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$fstatistic[,1]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
q.tax_table = data.frame(qiime2@tax_table)
q.filtered = q.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_mothur) %>%
column_to_rownames('OTU')
View(q.filtered)
View(q.filtered)
q.tax_table = data.frame(qiime2@tax_table)
q.filtered = q.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_qiime2) %>%
column_to_rownames('OTU')
View(q.filtered)
View(q.filtered)
View(mothur)
View(mothur)
library(tidyverse)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(stringr)
library(magrittr)
library(knitr)
# Load the data
load("mothur_phyloseq.RData")
load("qiime2_phyloseq.RData")
# Normalize (Note not used anywhere yet, since I wasn't sure about it at first)
set.seed(4831)
m.norm = rarefy_even_depth(mothur, sample.size=100000)
q.norm = rarefy_even_depth(qiime2, sample.size=100000)
# Get percentages
m.percent = transform_sample_counts(m.norm, function(x) 100 * x/sum(x))
q.percent = transform_sample_counts(q.norm, function(x) 100 * x/sum(x))
phylum_name_mothur = "Chloroflexi"
phylum_name_qiime2 = "D_1__Chloroflexi"
# Alpha-diversity of whole (mothur)
m.alpha = estimate_richness(m.norm, measures = c("Chao1", "Shannon"))
m.meta.alpha = full_join(rownames_to_column(m.alpha),
rownames_to_column(data.frame(m.percent@sam_data)), by = "rowname")
m.meta.alpha %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Shannon)) +
geom_smooth(method='auto', aes(x=as.numeric(Depth_m), y=Shannon)) +
labs(title="Alpha-diversity across depth for mothur", y="Shannon's diversity index", x="Depth (m)")
m.meta.alpha %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Chao1)) +
geom_smooth(method='auto', aes(x=as.numeric(Depth_m), y=Chao1)) +
labs(title="Chao1 across depth for mothur", y="Chao1 richness estimator", x="Depth (m)")
m.meta.alpha %>%
ggplot() +
geom_point(aes(x=O2_uM, y=Shannon)) +
labs(title="Alpha-diversity across oxygen concentration for mothur", y="Shannon's diversity index", x="Oxygen (uM)")
# Alpha-diversity of whole (qiime2)
q.alpha = estimate_richness(q.norm, measures = c("Chao1", "Shannon"))
q.meta.alpha = full_join(rownames_to_column(q.alpha),
rownames_to_column(data.frame(q.percent@sam_data)), by = "rowname")
q.meta.alpha %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Shannon)) +
geom_smooth(method='auto', aes(x=as.numeric(Depth_m), y=Shannon)) +
labs(title="Alpha-diversity across depth for qiime2", y="Shannon's diversity index", x="Depth (m)")
q.meta.alpha %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Chao1)) +
geom_smooth(method='auto', aes(x=as.numeric(Depth_m), y=Chao1)) +
labs(title="Chao1 across depth for qiime2", y="Chao1 richness estimator", x="Depth (m)")
q.meta.alpha %>%
ggplot() +
geom_point(aes(x=O2_uM, y=Shannon)) +
labs(title="Alpha-diversity across oxygen concentration for qiime2", y="Shannon's diversity index", x="Oxygen (uM)")
# Taxa abundance
m.percent %>%
plot_bar(fill="Phylum")+
geom_bar(aes(fill=Phylum), stat="identity")+
labs(title="Phyla across samples for mothur")
# Taxa abundance
q.percent %>%
plot_bar(fill="Phylum")+
geom_bar(aes(fill=Phylum), stat="identity")+
labs(title="Phyla across samples for qiime2")
# Significance depth
m.norm %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
tax_glom(taxrank = 'Phylum') %>%
psmelt() %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
m.percent %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
psmelt() %>%
group_by(Sample) %>%
summarize(Abundance_sum=sum(Abundance), Depth_m=mean(Depth_m)) %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Abundance_sum)) +
geom_smooth(method='lm', aes(x=as.numeric(Depth_m), y=Abundance_sum)) +
labs(title="Abundance unclassified domain across depth")
# Significance oxygen
print(phylum_name_mothur)
m.norm %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
tax_glom(taxrank = 'Phylum') %>%
psmelt() %>%
lm(Abundance ~ O2_uM, .) %>%
summary()
m.percent %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
psmelt() %>%
group_by(Sample) %>%
summarize(Abundance_sum=sum(Abundance), O2_uM=mean(O2_uM)) %>%
ggplot() +
geom_point(aes(x=O2_uM, y=Abundance_sum)) +
geom_smooth(method='lm', aes(x=as.numeric(O2_uM), y=Abundance_sum)) +
labs(title="Abundance unclassified domain across oxygen concentration")
# Significance depth
q.norm %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
tax_glom(taxrank = 'Phylum') %>%
psmelt() %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
q.percent %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
psmelt() %>%
group_by(Sample) %>%
summarize(Abundance_sum=sum(Abundance), Depth_m=mean(Depth_m)) %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Abundance_sum)) +
geom_smooth(method='lm', aes(x=as.numeric(Depth_m), y=Abundance_sum)) +
labs(title="Abundance unclassified domain across depth")
# Significance oxygen
q.norm %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
tax_glom(taxrank = 'Phylum') %>%
psmelt() %>%
lm(Abundance ~ O2_uM, .) %>%
summary()
q.percent %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
psmelt() %>%
group_by(Sample) %>%
summarize(Abundance_sum=sum(Abundance), O2_uM=mean(O2_uM)) %>%
ggplot() +
geom_point(aes(x=O2_uM, y=Abundance_sum)) +
geom_smooth(method='lm', aes(x=as.numeric(O2_uM), y=Abundance_sum)) +
labs(title="Abundance unclassified domain across oxygen concentration")
# Number of OTUs
m.chlor_subset = m.norm %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
estimate_richness(measures = c("Observed"))
# Different way to get number of OTUs
m.tax_table = data.frame(m.norm@tax_table)
m.filtered = m.tax_table %>%
rownames_to_column('OTU') %>%
filter(Phylum==phylum_name_mothur) %>%
column_to_rownames('OTU')
# Number of ASVs
q.chlor_subset = q.norm %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
estimate_richness(measures = c("Observed"))
# Different way to get number of ASVs
q.tax_table = data.frame(q.norm@tax_table)
q.filtered = q.tax_table %>%
rownames_to_column('ASV') %>%
filter(Phylum==phylum_name_qiime2) %>%
column_to_rownames('ASV')
# Remove the otu_stats object so upon rerunning doesn’t add to existing object
rm(otu_stats)
# Create new data frame
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
otu_data = linear_fit$coefficients["Depth_m",]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across depth")
# Remove the asv_stats object so upon rerunning doesn’t add to existing object
rm(asv_stats)
# Create new data frame
asv_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(q.filtered)){
linear_fit = q.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ Depth_m, .) %>%
summary()
asv_data = linear_fit$coefficients["Depth_m",]
asv_stats <- rbind(asv_stats, asv_data)
}
colnames(asv_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(asv_stats) <- row.names(q.filtered)
kable(asv_stats,caption="Correlation data of ASVs within Chloroflexi phylum across depth")
# Remove the otu_stats object so upon rerunning doesn’t add to existing object
rm(otu_stats)
# Create new data frame
otu_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(m.filtered)){
linear_fit = m.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ O2_uM, .) %>%
summary()
otu_data = linear_fit$coefficients["O2_uM",]
otu_stats <- rbind(otu_stats, otu_data)
}
colnames(otu_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(otu_stats) <- row.names(m.filtered)
kable(otu_stats,caption="Correlation data of OTUs within Chloroflexi phylum across O2 gradient")
# Remove the asv_stats object so upon rerunning doesn’t add to existing object
rm(asv_stats)
# Create new data frame
asv_stats = data.frame("Estimate" = numeric(0), "Std. Error"= numeric(0),"t value"= numeric(0),"Pr(>|t|)"= numeric(0))
for (otu in row.names(q.filtered)){
linear_fit = q.norm %>%
psmelt() %>%
filter(OTU==otu) %>%
lm(Abundance ~ O2_uM, .) %>%
summary()
asv_data = linear_fit$coefficients["O2_uM",]
asv_stats <- rbind(asv_stats, asv_data)
}
colnames(asv_stats)<- (c("Estimate", "Std. Error","t value","Pr(>|t|)"))
row.names(asv_stats) <- row.names(q.filtered)
kable(asv_stats,caption="Correlation data of ASVs within Chloroflexi phylum across O2 gradient")
m.percent %>%
subset_taxa(Phylum==phylum_name_mothur) %>%
psmelt() %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Abundance)) +
geom_smooth(method='lm', aes(x=Depth_m, y=Abundance)) +
facet_wrap(~OTU, scales="free_y") +
labs(title="Abundance of OTUs within Chloroflexi phylum across depth")
q.percent %>%
subset_taxa(Phylum==phylum_name_qiime2) %>%
psmelt() %>%
ggplot() +
geom_point(aes(x=Depth_m, y=Abundance)) +
geom_smooth(method='lm', aes(x=Depth_m, y=Abundance)) +
facet_wrap(~OTU, scales="free_y") +
labs(title="Abundance of ASVs within Chloroflexi phylum across depth")
library(tidyverse)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(stringr)
library(magrittr)
library(knitr)
library(gridExtra)
library(grid)
load("mothur_phyloseq.RData")
load("qiime2_phyloseq.RData")
set.seed(4831)
m.norm = rarefy_even_depth(mothur, sample.size=100000)
q.norm = rarefy_even_depth(qiime2, sample.size=100000)
m.percent = transform_sample_counts(m.norm, function(x) 100 * x/sum(x))
q.percent = transform_sample_counts(q.norm, function(x) 100 * x/sum(x))
View(m.percent)
View(m.percent)
View(q.perc)
View(q.perc)
data.frame(m.percent)
data.frame(m.percent@otu_table)
x = data.frame(m.percent@otu_table)
View(x)
View(x)
View(m.tax_table)
View(m.tax_table)
View(m.percent)
View(m.percent)
phyloGlom = tax_glom(m.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
View(phyloGlom)
View(phyloGlom)
View(glomOTU)
View(glomOTU)
View(phyloGlom)
View(phyloGlom)
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
View(glomOTU)
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(asv_table(phyloGlom))
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
load("qiime2_phyloseq.RData")
set.seed(4831)
m.norm = rarefy_even_depth(mothur, sample.size=100000)
q.norm = rarefy_even_depth(qiime2, sample.size=100000)
m.percent = transform_sample_counts(m.norm, function(x) 100 * x/sum(x))
q.percent = transform_sample_counts(q.norm, function(x) 100 * x/sum(x))
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
colnames(glomOTU) = glomTax[,Phylum]
colnames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
View(glomOTU)
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
rownames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
View(glomOTU)
phyloGlom = tax_glom(m.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
colnames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
View(glomOTU)
phyloGlom = tax_glom(q.percent, "Phylum")
glomTax = tax_table(phyloGlom)[,"Phylum"]
glomOTU = data.frame(otu_table(phyloGlom))
rownames(glomOTU) = glomTax[,"Phylum"]
View(glomOTU)
View(glomOTU)
install.packages("randomcolor")
y
Y
install.packages("randomcoloR")
